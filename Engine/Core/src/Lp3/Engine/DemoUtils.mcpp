~namespace Lp3::Engine;

class DemoUtils
{
    ~block "cpp-include"
    {
        #ifdef LP3_COMPILE_TARGET_DREAMCAST
            #include <kos.h>
        #endif
    }

    ~block "cpp"
    { namespace {
        #ifdef LP3_COMPILE_TARGET_DREAMCAST
            int read_input() {
                maple_device_t *cont;
                cont_state_t *state;

                cont = maple_enum_type(0, MAPLE_FUNC_CONTROLLER);

                if(!cont) {
                    return 0;
                }

                /* Check for start on the controller */
                state = (cont_state_t *)maple_dev_status(cont);

                if(!state) {
                    printf("Error getting controller status\n");
                    return 1;
                }

                if(state->buttons & CONT_START) {
                    printf("Pressed start\n");
                    return 1;
                }

                return 0;
            }
        #endif
    } }

    /* In many demos, we don't care if the PC version stops instantly
     * but will want to wait for Start to be pressed on the Dreamcast. */
    public static bool DreamcastStartIsPressed()
    {
        #ifdef LP3_COMPILE_TARGET_DREAMCAST
            return 1 == read_input();
        #else
            return true;
        #endif
    }
};

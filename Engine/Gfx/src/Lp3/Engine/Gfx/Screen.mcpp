

~import Lp3::Engine::Gfx::Renderer;
~import boost::intrusive_ptr;


~namespace Lp3::Engine::Gfx;


class Screen {};

class ScreenObject
{
	protected int references;

public:
	ScreenObject()
	:	references(0)
	{
	}

	virtual ~ScreenObject()
	{
	}

	virtual void DrawOpaque(Renderer & renderer) = 0;

	virtual void DrawTranslucent(Renderer & renderer) = 0;

	~global ~friend void intrusive_ptr_add_ref(ScreenObject * obj)
	{
		++ obj->references;
	}

	~global ~friend void intrusive_ptr_release(ScreenObject * obj)
	{
		-- obj->references;
		if (0 >= obj->references)
		{
			delete obj;
		}
	}
};


typedef boost::intrusive_ptr<ScreenObject> ScreenObjectPtr;


class Screen
{
	~import Lp3::Engine::Gfx::ImageMemory;

public:
	virtual ~Screen()
	{
	}

	virtual ImageMemory & GetImageMemory() = 0;

	virtual void SetObject(ScreenObjectPtr object) = 0;
};

~import Lp3::Engine::Input::DirectInput::DirectInputDevice;
~import Lp3::Exception;
~import LPDIRECTINPUT8;
~import Lp3::Float32;
~import HINSTANCE;
~import HWND;
~import LP3_LOG_ERROR;
~import std::vector;

~namespace Lp3::Engine::Input::DirectInput;

class DiKeyboardDevice : public DirectInputDevice
{
    ~block "top"
    {
        #include <Lp3/LE.h>
        #ifdef LP3_COMPILE_TARGET_WINDOWS
        #define DIRECTINPUT_VESRION 0x0800
        #include <dinput.h>
    }
    ~block "bottom"
    {
        #endif // End LP3_COMPILE_TARGET_WINDOWS
    }

    ~block "h"
    {
        private: char kbBuffer[256];
    }
    ~block "cpp"
    {
        const char KbKeyName[256][21] =
        {
          "k0                  ", //0
          "escape              ",
          "1                   ",
          "2                   ",
          "3                   ",
          "4                   ",
          "5                   ",
          "6                   ",
          "7                   ",
          "8                   ",
          "9                   ",//10
          "0  (number)         ",
          "-                   ",
          "=                   ",
          "back space          ",
          "tab                 ",//15
          "Q                   ",
          "W                   ",
          "E                   ",
          "R                   ",
          "T                   ",//20
          "Y                   ",
          "U                   ",
          "I                   ",
          "O  (letter)         ",
          "P                   ",//25
          "[                   ",
          "]                   ",
          "return              ",
          "Ctrl (left)         ",
          "A                   ",//30
          "S                   ",
          "D                   ",
          "F                   ",
          "G                   ",
          "H                   ",//35
          "J                   ",
          "K                   ",
          "L                   ",
          ";                   ",
          "40                  ",//40
          "`                   ",
          "Shift (left)        ",
          "back slash          ",
          "Z                   ",
          "X                   ",//45
          "C                   ",
          "V                   ",
          "B                   ",
          "N                   ",
          "M                   ",//50
          ",                   ",
          ".                   ",
          "/                  ",
          "Shift (right)       ",
          "*                   ",//55
          "Alt (left)          ",
          "space bar           ",
          "caps lock           ",
          "F1                  ",
          "F2                  ",//60
          "F3                  ",
          "F4                  ",
          "F5                  ",
          "F6                  ",
          "F7                  ",//65
          "F8                  ",
          "F9                  ",
          "F10                 ",
          "num Lock            ",
          "scroll lock         ",//70
          "Numpad 7            ",
          "Numpad 8            ",
          "Numpad 9            ",
          "- (num pad)         ",
          "Numpad 4            ",//75
          "Numpad 5            ",
          "Numpad 6            ",
          "+ (num pad)         ",
          "Numpad 1            ",
          "Numpad 2            ",//80
          "Numpad 3            ",
          "Numpad 0            ",
          "period (num pad)    ",
          "84                  ",
          "85                  ",//85
          "86                  ",
          "F11                 ",
          "F12                 ",
          "89                  ",
          "90                  ",//90
          "91                  ",
          "92                  ",
          "93                  ",
          "94                  ",
          "95                  ",//95
          "96                  ",
          "97                  ",
          "98                  ",
          "99                  ",
          "F13                 ",//100
          "F14                 ",
          "F15                 ",
          "3                   ",
          "4                   ",
          "5                   ",
          "6                   ",
          "7                   ",
          "8                   ",
          "9                   ",
          "10                  ",
          "11                  ",
          "KANA                ",
          "13                  ",
          "14                  ",
          "15                  ",
          "16                  ",
          "17                  ",
          "18                  ",
          "19                  ",
          "20                  ",
          "21                  ",
          "22                  ",
          "23                  ",
          "24                  ",
          "25                  ",
          "26                  ",
          "27                  ",
          "28                  ",
          "29                  ",
          "30                  ",
          "31                  ",
          "32                  ",
          "33                  ",
          "34                  ",
          "35                  ",
          "36                  ",
          "37                  ",
          "38                  ",
          "39                  ",
          "40                  ",
          "Numpad Equals       ",
          "42                  ",
          "43                  ",
          "44                  ",
          "45                  ",
          ":                   ",
          "JAP. underline?!    ",
          "KANJI               ",
          "49                  ",
          "50                  ",
          "51                  ",
          "52                  ",
          "53                  ",
          "54                  ",
          "55                  ",
          "Numpad Enter        ",
          "Ctrl (right)        ",
          "58                  ",
          "59                  ",
          "60                  ",
          "61                  ",
          "62                  ",
          "63                  ",
          "64                  ",
          "65                  ",
          "66                  ",
          "67                  ",
          "68                  ",
          "69                  ",
          "70                  ",
          "71                  ",
          "72                  ",
          "13                  ",
          "74                  ",
          "75                  ",
          "76                  ",
          "77                  ",
          "78                  ",
          "Numpad comma        ",
          "80                  ",
          "/ (num pad)         ",
          "82                  ",
          "divide              ",
          "Alt (right)         ",
          "85                  ",
          "86                  ",
          "87                  ",
          "88                  ",
          "89                  ",
          "90                  ",
          "91                  ",
          "92                  ",
          "93                  ",
          "94                  ",
          "95                  ",
          "96                  ",
          "pause               ",
          "98                  ",
          "home                ",
          "up arrow            ",
          "page up             ",
          "2                   ",
          "left arrow          ",
          "4                   ",
          "right arrow         ",
          "6                   ",
          "end                 ",
          "down arrow          ",
          "page down           ",
          "insert credit       ",
          "delete (main kb)    ",
          "12                  ",
          "13                  ",
          "14                  ",
          "15                  ",
          "16                  ",
          "17                  ",
          "18                  ",
          "19                  ",
          "20                  ",
          "21                  ",
          "22                  ",
          "23                  ",
          "24                  ",
          "25                  ",
          "26                  ",
          "27                  ",
          "28                  ",
          "29                  ",
          "30                  ",
          "31                  ",
          "32                  ",
          "33                  ",
          "34                  ",
          "35                  ",
          "36                  ",
          "37                  ",
          "38                  ",
          "39                  ",
          "40                  ",
          "41                  ",
          "42                  ",
          "43                  ",
          "44                  ",
          "45                  ",
          "46                  ",
          "47                  ",
          "48                  ",
          "49                  ",
          "50                  ",
          "51                  ",
          "52                  ",
          "53                  ",
          "54                  ",
          "55                  ",
        };

    } // end block

    public DiKeyboardDevice(DIDEVICEINSTANCE devInstance,
                            LPDIRECTINPUT8 * di8,
                            HWND hWnd)
    :   DirectInputDevice(devInstance)

    {
        initialize(hWnd, di8, device, deviceInstance, c_dfDIKeyboard, false);
        device->Acquire();
    }

    public virtual int FindPressedKeyCode()
    {
        for (int i = 0; i < 256; i ++){
            if (kbBuffer[i] & 0x80) //KEYDOWN(kbBuffer, i)
                return i;
        }
        return -1;
    }

    public virtual int GetKeyCount()
    {
        return 256;
    }

    public virtual const char * GetKeyName(unsigned int keyCode)
    {
        return (char *)KbKeyName[keyCode];
    }

    public virtual bool GetKeyState(unsigned int keyCode)
    {
        return bool(kbBuffer[keyCode] & 0x80);
    }

    public virtual Lp3::Float32 GetKeyAnalogState(unsigned int keyCode)
    {
        return GetKeyState(keyCode) ? 1.0f : 0.0f;
    }

    public virtual bool IsAnalogKey(unsigned int keyCode)
    {
        return false;
    }

    protected virtual void update()
    {
        HRESULT hr = device->GetDeviceState(sizeof(kbBuffer), (LPVOID)&kbBuffer);
        if (FAILED(hr)){
           LP3_LOG_DEBUG("Could not get device state.");
           return;// -1;
        }
    }
}
